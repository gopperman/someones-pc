{"version":3,"sources":["reducer.js","store.js","components/TableHeader.js","components/Table.js","containers/CollectionOverview.js","utils/balls.js","components/Header.js","components/Footer.js","actions/actions.js","components/SearchString/Form.js","components/SearchString/Results.js","containers/SearchStringBuilder.js","App.js","index.js"],"names":["initialState","selectedPKMN","JSON","parse","localStorage","getItem","rootReducer","state","action","type","payload","sort","a","b","filter","id","store","createStore","TableHeader","headers","className","map","h","i","key","_","get","src","alt","Table","data","d","j","displayType","classes","connect","collection","balls","fields","ball","url","displayName","Header","Footer","href","target","rel","selectPKMN","deselectPKMN","SearchStringForm","props","form","setFormRef","element","updateSearchString","bind","event","checked","this","value","nextProps","nextState","length","setItem","stringify","ref","pokedex","pkmn","img","imgSrc","name","english","toLowerCase","htmlFor","includes","onChange","Component","dispatch","searchString","join","onClick","e","textbox","copy","innerHTML","setTimeout","readOnly","SearchStringBuilder","App","path","component","CollectionOverview","ui","ReactDOM","render","document","getElementById"],"mappings":"wt4JAAMA,EAAe,CACnBC,aAAcC,KAAKC,MAAMC,aAAaC,QAAQ,kBAAoB,IAsBrDC,MAnBf,WAAoD,IAA/BC,EAA8B,uDAAtBP,EAAcQ,EAAQ,uCACjD,OAAQA,EAAOC,MACb,IAAK,cACH,MAAO,CACHR,aAAc,sBACTM,EAAMN,cADG,EAEXO,EAAOE,UACRC,MAAM,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,MAE5B,IAAK,gBACH,MAAO,CACLZ,aAAcM,EAAMN,aAAaa,QAAQ,SAAAC,GAAE,OAAIA,KAAQP,EAAOE,YAGlE,QACE,OAAOH,ICdES,EAFDC,YAAYX,G,iBCgBXY,EAhBK,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACpB,OACE,2BAAOC,UAAW,oBAChB,4BACGD,EAAQE,KAAI,SAACC,EAAGC,GAAJ,OACX,wBAAIC,IAAKD,EAAGH,UAAW,kBACT,SAAXE,EAAEb,KACDgB,IAAEC,IAAIJ,EAAG,UAAW,IACnB,yBAAKK,IAAG,eAAUF,IAAEC,IAAIJ,EAAG,MAAO,KAAOM,IAAG,UAAKH,IAAEC,IAAIJ,EAAG,MAAO,cCyBjEO,EAhCD,SAAC,GAAqB,IAApBV,EAAmB,EAAnBA,QAASW,EAAU,EAAVA,KACvB,OACE,2BAAOV,UAAU,YACf,kBAAC,EAAD,CAAaD,QAASA,IACtB,+BACGW,EAAKT,KAAI,SAACU,EAAER,GACX,OACE,wBAAIH,UAAU,gBAAgBI,IAAKD,GAChCJ,EAAQE,KAAI,SAACC,EAAEU,GACd,IAAMC,EAAcR,IAAEC,IAAIJ,EAAG,cAAe,IAC1CE,EAAMC,IAAEC,IAAIJ,EAAG,MAAO,IACtBY,EAAO,yBAAiC,SAAXZ,EAAEb,KAAmB,uBAAyB,IAE7E,OACE,wBAAIe,IAAKQ,EAAGZ,UAAWc,GACL,UAAhBD,EACC,yBAAKN,IAAG,eAAUF,IAAEC,IAAIK,EAAGP,EAAK,KAAOI,IAAKJ,IAC1CC,IAAEC,IAAIK,EAAGT,EAAEE,IAAK,e,iBCSxBW,eANS,SAAC5B,GACvB,MAAO,CACL6B,WAAY7B,EAAM6B,cAIPD,EAvBY,SAAC,GAAwB,EAAvBE,MAAwB,IAAjBD,EAAgB,EAAhBA,WASlC,OACE,6BACE,kBAAC,EAAD,CAAOjB,QARH,GAAN,mBACKmB,GADL,YCHKD,EAAMhB,KAAI,SAACkB,GAChB,MAAO,CACLf,IAAKe,EAAKxB,GACVN,KAAM,OACN+B,IAAI,SAAD,OAAWD,EAAKxB,GAAhB,QACHa,IAAKW,EAAKE,kBDMuBX,KAAMM,QEP9BM,EATA,WACb,OACE,gCACE,yDACA,uECISC,EARA,WACb,OACE,qDACoB,uBAAGC,KAAK,wBAAwBC,OAAO,SAASC,IAAI,uBAApD,gB,qDCLlBC,EAAa,SAACrC,GAClB,MAAO,CAAED,KAAM,cAAeC,YAG1BsC,EAAe,SAACtC,GACpB,MAAO,CAAED,KAAM,gBAAiBC,Y,SCC5BuC,E,YACJ,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KACDC,KAAO,KAEZ,EAAKC,WAAa,SAAAC,GAChB,EAAKF,KAAOE,GAGd,EAAKC,mBAAqB,EAAKA,mBAAmBC,KAAxB,gBART,E,gFAWAC,GACbA,EAAMX,OAAOY,QACfC,KAAKR,MAAMH,WAAWS,EAAMX,OAAOc,OAEnCD,KAAKR,MAAMF,aAAaQ,EAAMX,OAAOc,S,4CAInBC,EAAWC,GAC/B,OAAOD,EAAU3D,aAAa6D,SAAWJ,KAAKR,MAAMjD,aAAa6D,S,2CAIjE1D,aAAa2D,QAAQ,eAAgB7D,KAAK8D,UAAUN,KAAKR,MAAMjD,iB,+BAGvD,IAAD,OACP,OACE,0BAAMmB,UAAU,qBAAqB6C,IAAKP,KAAKN,YAC5Cc,EAAQ7C,KAAK,SAAC8C,GACb,IAAMC,EAAM3C,IAAEC,IAAIyC,EAAM,OAAO,GACzBE,EAASD,GAAG,8BAAgCD,EAAKG,KAAKC,QAAQC,cAAlD,QAElB,OACI,2BAAOpD,UAAU,sBAAsBqD,QAASN,EAAKpD,GAAIS,IAAK2C,EAAKpD,IACjE,2BACEK,UAAU,sBACVX,KAAK,WACLM,GAAIoD,EAAKpD,GACT4C,MAAOQ,EAAKpD,GACZ0C,QAAS,EAAKP,MAAMjD,aAAayE,SAASP,EAAKpD,IAC/C4D,SAAW,EAAKrB,qBAClB,uBAAGlC,UAAU,sBACX,yBAAKO,IAAK0C,EAAQzC,IAAG,UAAKuC,EAAKG,KAAKC,QAAf,aACpBJ,EAAKG,KAAKC,kB,GA9CEK,aA+D/B,IAIezC,eAJS,SAAC5B,GACvB,MAAO,CAAEN,aAAcM,EAAMN,iBAR/B,SAA4B4E,GAC1B,MAAO,CACL9B,WAAY,SAAAoB,GAAI,OAAIU,EAAS9B,EAAWoB,KACxCnB,aAAc,SAAAmB,GAAI,OAAIU,EAAS7B,EAAamB,QAQjChC,CAA6Cc,G,kBCtC7Cd,eAJS,SAAC5B,GACvB,MAAO,CAAEN,aAAcM,EAAMN,gBAGhBkC,EA/Ba,SAAC,GAAsB,IAApBlC,EAAmB,EAAnBA,aAEvB6E,EAAe7E,EAAa6D,OAAS7D,EAAa8E,OADlC,iHActB,OACE,yBAAK3D,UAAU,2BACb,8BACEA,UAAU,wBACVuC,MAAOmB,EACPE,QAhBuB,SAACC,GAC5B,IAAMC,EAAUD,EAAEpC,OAElBsC,IAAKD,EAAQE,WAEbF,EAAQvB,MAAQ,uBAChB0B,YAAW,WACTH,EAAQvB,MAAQmB,IACf,OASCQ,UAAQ,QCPDC,EAXa,WAC1B,OACE,yBAAKnE,UAAU,aACb,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,Q,iBCUSoE,EAbH,kBACV,kBAAC,IAAD,KACE,6BACI,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,IAAIC,UAAYH,IAC5B,kBAAC,IAAD,CAAOE,KAAK,cAAcC,UAAYC,IACtC,kBAAC,IAAD,CAAOF,KAAK,yBAAyBC,UAAYC,IACjD,kBAAC,IAAD,CAAOF,KAAK,4BAA4BC,UAAYC,QCTxDC,G,OACJ,kBAAC,IAAD,CAAU5E,MAAOA,GACf,kBAAC,EAAD,QAIJ6E,IAASC,OAAOF,EAAIG,SAASC,eAAe,U","file":"static/js/main.667bb915.chunk.js","sourcesContent":["const initialState = {\n  selectedPKMN: JSON.parse(localStorage.getItem('selectedPKMN')) || []\n}\n\nfunction rootReducer(state = initialState, action) {\n  switch (action.type) {\n    case \"SELECT_PKMN\":\n      return {\n          selectedPKMN: [\n            ...state.selectedPKMN,\n            +action.payload\n          ].sort( (a, b) => a - b )\n        }\n    case \"DESELECT_PKMN\":\n      return {\n        selectedPKMN: state.selectedPKMN.filter( id => id !== +action.payload )\n      }\n\n    default:\n      return state\n  }\n}\n\nexport default rootReducer\n","import { createStore } from \"redux\"\nimport rootReducer from \"./reducer\"\n\nconst store = createStore(rootReducer)\n\nexport default store\n","import React from 'react'\nimport _ from 'lodash'\n\nconst TableHeader = ({headers}) => {\n  return (\n    <thead className={'pkmnList__header'}>\n      <tr>\n        {headers.map((h, i) =>\n          <th key={i} className={'pkmnList__cell'}>\n            {h.type === 'text' ?\n              _.get(h, 'display', '') :\n              (<img src={`/img/${_.get(h, 'url', '')}`} alt={`${_.get(h, 'key', '')}`} />)\n            }</th>\n        )}\n      </tr>\n    </thead>\n  )\n}\n\nexport default TableHeader\n","import React from 'react'\nimport _ from 'lodash'\nimport TableHeader from './TableHeader.js'\n\nconst Table = ({headers, data}) => {\n  return (\n    <table className=\"pkmnList\">\n      <TableHeader headers={headers} />\n      <tbody>\n        {data.map((d,i) => {\n          return (\n            <tr className=\"pkmnList__row\" key={i}>\n              {headers.map((h,j) => {\n                const displayType = _.get(h, 'displayType', ''),\n                  key = _.get(h, 'key', ''),\n                  classes = `pkmnList__cell ${(h.type === 'ball') ? 'pkmnList__cell--ball' : ''}`\n\n                return (\n                  <td key={j} className={classes}>\n                   {displayType === 'image' ?\n                    (<img src={`/img/${_.get(d, key, '')}`} alt={key} />) :\n                      (_.get(d, h.key, ''))\n                    }\n                  </td>\n                )\n              })}\n            </tr>\n          )\n        })\n        }\n      </tbody>\n    </table>\n  )\n}\n\n // #TODO: PropTypes\nexport default Table\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport Table from '../components/Table'\nimport fields from '../data/collectionOverview.json'\nimport { getBallHeaders } from '../utils/balls.js'\n\n\nconst CollectionOverview = ({balls, collection}) => {\n\n  const createHeaders = () => {\n    return [\n      ...fields,\n      ...getBallHeaders()\n    ]\n  }\n\n  return (\n    <div>\n      <Table headers={createHeaders()} data={collection} />\n    </div>\n  )\n}\n\n\nconst mapStateToProps = (state) => {\n  return {\n    collection: state.collection\n  }\n}\n\nexport default connect(mapStateToProps)(CollectionOverview);\n","import balls from '../data/balls.json'\n\n/**\n * Gets a list of all of the ball types, compatible with table headers\n * @return {array} an array of balls\n */\nconst getBallHeaders = () => {\n  return balls.map((ball) => {\n    return {\n      key: ball.id,\n      type: 'ball',\n      url: `balls/${ball.id}.png`,\n      alt: ball.displayName\n    }\n  })\n}\n\nexport {\n  getBallHeaders\n}\n","import React from 'react'\n\nconst Header = () => {\n  return (\n    <header>\n      <h1>Accessing Someone's PC...</h1>\n      <h2>> Pok√©mon Go Search String Builder</h2>\n    </header>\n  )\n}\n\nexport default Header;\n","import React from 'react'\n\nconst Footer = () => {\n  return (\n    <footer>\n      Made with love by <a href=\"http://gopperman.com/\" target=\"_blank\" rel=\"noopener noreferrer\">@gopperman</a>\n    </footer>\n  )\n}\n\nexport default Footer;\n","const selectPKMN = (payload) => {\n  return { type: \"SELECT_PKMN\", payload }\n}\n\nconst deselectPKMN = (payload) => {\n  return { type: \"DESELECT_PKMN\", payload }\n}\n\nexport {\n  selectPKMN,\n  deselectPKMN\n}\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { selectPKMN, deselectPKMN } from '../../actions/actions'\nimport pokedex from '../../data/pokedex-go.json'\nimport _ from 'lodash'\n\nclass SearchStringForm extends Component {\n  constructor(props) {\n    super(props)\n    this.form = null\n\n    this.setFormRef = element => {\n      this.form = element\n    }\n\n    this.updateSearchString = this.updateSearchString.bind(this)\n  }\n\n  updateSearchString(event) {\n    if (event.target.checked) {\n      this.props.selectPKMN(event.target.value)\n    } else {\n      this.props.deselectPKMN(event.target.value)\n    }\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return nextProps.selectedPKMN.length !== this.props.selectedPKMN.length\n  }\n\n  componentDidUpdate() {\n    localStorage.setItem('selectedPKMN', JSON.stringify(this.props.selectedPKMN))\n  }\n\n  render() {\n    return (\n      <form className=\"searchstring__form\" ref={this.setFormRef}>\n        {pokedex.map( (pkmn) => {\n          const img = _.get(pkmn, 'img', false)\n          const imgSrc = img ? img : `img/pokemon/regular/${pkmn.name.english.toLowerCase()}.png`\n\n          return (\n              <label className=\"searchstring__label\" htmlFor={pkmn.id} key={pkmn.id}>\n                <input\n                  className=\"searchstring__input\"\n                  type=\"checkbox\"\n                  id={pkmn.id}\n                  value={pkmn.id}\n                  checked={this.props.selectedPKMN.includes(pkmn.id)}\n                  onChange={ this.updateSearchString } />\n                <p className=\"searchstring__pkmn\">\n                  <img src={imgSrc} alt={`${pkmn.name.english} sprite`} />\n                  {pkmn.name.english}\n                </p>\n              </label>\n          )\n        })}\n      </form>\n    )\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    selectPKMN: pkmn => dispatch(selectPKMN(pkmn)),\n    deselectPKMN: pkmn => dispatch(deselectPKMN(pkmn))\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return { selectedPKMN: state.selectedPKMN }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchStringForm)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport copy from 'copy-to-clipboard'\n\nconst SearchStringResults = ({ selectedPKMN }) => {\n  const defaultString = \"Choose a POK√©MON to add it to your search string. Your string will automatically be saved between sessions.\"\n  const searchString = selectedPKMN.length ? selectedPKMN.join() : defaultString\n\n  const showCopyNotification = (e) => {\n    const textbox = e.target\n\n    copy(textbox.innerHTML)\n\n    textbox.value = 'Copied to Clipboard!'\n    setTimeout(() => {\n      textbox.value = searchString\n    }, 1200)\n  }\n\n  return (\n    <div className=\"searchstring__container\">\n      <textarea\n        className=\"searchstring__results\"\n        value={searchString}\n        onClick={showCopyNotification}\n        readOnly>\n      </textarea>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return { selectedPKMN: state.selectedPKMN }\n}\n\nexport default connect(mapStateToProps)(SearchStringResults)\n","import React from 'react'\nimport Header from '../components/Header'\nimport Footer from '../components/Footer'\nimport SearchStringForm from '../components/SearchString/Form'\nimport SearchStringResults from '../components/SearchString/Results'\n\n\nconst SearchStringBuilder = () => {\n  return (\n    <div className=\"container\">\n      <Header />\n      <SearchStringForm />\n      <SearchStringResults />\n      <Footer />\n    </div>\n  )\n}\n\nexport default SearchStringBuilder;\n","import React from 'react'\nimport CollectionOverview from './containers/CollectionOverview'\nimport SearchStringBuilder from './containers/SearchStringBuilder'\nimport './App.css'\nimport {\n          BrowserRouter as Router,\n          Route,\n          Switch\n        } from 'react-router-dom';\n\nconst App = () =>\n  <Router>\n    <div>\n        <Switch>\n          <Route path='/' component={ SearchStringBuilder } />\n          <Route path='/collection' component={ CollectionOverview } />\n          <Route path='/collection/ball/:ball' component={ CollectionOverview } />\n          <Route path='/collection/pkmn/:pokemon' component={ CollectionOverview } />\n        </Switch>\n    </div>\n  </Router>\n;\n\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport App from './App'\nimport './index.css'\n//import { selectPKMN } from './actions/actions'\n\nconst ui =\n  <Provider store={store}>\n    <App />\n  </Provider>\n\n\nReactDOM.render(ui, document.getElementById('root'))\n"],"sourceRoot":""}